Given an array arr containing only 0s, 1s, and 2s. Sort the array in ascending order.

Examples:

Input: arr[]= [0, 2, 1, 2, 0]
Output: 0 0 1 2 2
Explanation: 0s 1s and 2s are segregated into ascending order.
Input: arr[] = [0, 1, 0]
Output: 0 0 1
Explanation: 0s 1s and 2s are segregated into ascending order.
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

solution=
class Solution:
    # Function to sort an array of 0s, 1s, and 2s
    def sort012(self, arr):
        left, mid, right = 0, 0, len(arr) - 1
        
        # Traverse the array and swap elements to their correct positions
        while mid <= right:
            if arr[mid] == 0:
                arr[left], arr[mid] = arr[mid], arr[left]  # Swap 0 to the left side
                left += 1
                mid += 1
            elif arr[mid] == 1:
                mid += 1  # 1 is already in the correct position
            else:
                arr[mid], arr[right] = arr[right], arr[mid]  # Swap 2 to the right side
                right -= 1
     

